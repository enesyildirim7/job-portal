# Generated by Django 4.1.2 on 2022-10-27 22:58

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("jobs", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Kullanıcı ID",
                    ),
                ),
                (
                    "isim",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="İsim"
                    ),
                ),
                (
                    "soyisim",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Soyisim"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=320, unique=True, verbose_name="Email"
                    ),
                ),
                ("password", models.CharField(max_length=64, verbose_name="Şifre")),
                (
                    "rol",
                    models.IntegerField(
                        choices=[(1, "İşveren"), (2, "İş Arayan")],
                        default=2,
                        verbose_name="Kullanıcı Rolü",
                    ),
                ),
                (
                    "uyelik_tarihi",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Üyelik Tarihi"
                    ),
                ),
                (
                    "son_oturum",
                    models.DateTimeField(auto_now=True, verbose_name="Son Oturum"),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Yönetici"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Aktif Hesap"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Personel"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="Genel Yönetici"),
                ),
                (
                    "basvurulan_ilanlar",
                    models.ManyToManyField(
                        blank=True,
                        related_name="+",
                        to="jobs.jobs",
                        verbose_name="Başvurulan İlanlar",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "kaydedilen_ilanlar",
                    models.ManyToManyField(
                        blank=True,
                        related_name="+",
                        to="jobs.jobs",
                        verbose_name="Kaydedilen İlanlar",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kullanıcı",
                "verbose_name_plural": "Kullanıcılar",
            },
        ),
    ]
